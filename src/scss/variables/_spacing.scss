// ASU Design System Spacing

// If we are going to override the spacing schema in Bootstrap 4,
// we need to keep in mind how these spacing variables are used in various
// utilities. See Spacing Documentation here:
// https://getbootstrap.com/docs/4.4/utilities/spacing/
//
// Because the familiar size abbreviations, "xs", "sm", "lg", are actually only
// used for the media query context, it would be a mistake to use the same
// schema here for spacing. THis is why the vanilla Bootstrap Spacing schema is
// numeric.

// SPACE Variables
$asu-space-0: 0;
$asu-space-2: 0.125rem; //2px
$asu-space-4: 0.25rem; //4px
$asu-space-8: 0.5rem; // 8px
$asu-space-16: 1rem; // 16px
$asu-space-24: 1.5rem; //24px
$asu-space-32: 2rem; //32px
$asu-space-56: 3.5rem; // 56px
$asu-space-64: 4rem; //64px
$asu-space-128: 8rem; //128px

// Spacing
//
// control the default styling of most of elements
$spacers: (
  '0': 0,
  '2': $asu-space-2,
  '4': $asu-space-4,
  '8': $asu-space-8,
  '16': $asu-space-16,
  '24': $asu-space-24,
  '32': $asu-space-32,
  '56': $asu-space-56,
  '64': $asu-space-64,
  '128': $asu-space-128,
);

/*
  VANILLA BOOTSTRAP VARIABLES

// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem !default;
$spacers: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$spacers: map-merge(
  (
    0: 0,
    1: ($spacer * .25),
    2: ($spacer * .5),
    3: $spacer,
    4: ($spacer * 1.5),
    5: ($spacer * 3)
  ),
  $spacers
);

// This variable affects the `.h-*` and `.w-*` classes.
$sizes: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$sizes: map-merge(
  (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto
  ),
  $sizes
);
*/
